////////////////////////////////////////////////////////////////////////////////////////////////////
//
//        Copyright (C) 2021 Eximius Design
//                All Rights Reserved
//
// This entire notice must be reproduced on all copies of this file
// and copies of this file may only be made by a person if such person is
// permitted to do so under the terms of a subsisting license agreement
// from Eximius Design
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Functional Descript: Channel Alignment Testbench File
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////////

cmd to run test:
-----------------------------------------------------------------------------------------
1. Go to directory '/design/ca/dv/scripts'
2. Use command :   python3 run_all_sim.py copy -d MY_TEST1 -cfg sailrock_cfg.txt
   This will help create a directory named <MY_TEST1> in parallel to 'scripts' under 'dv' folder.
   User may choose any name in place of MY_TEST1
3. Go to directory '../MY_TEST1'
4. Use command:  ./run_sim

   This will run 'ca_basic_test_c' test-sequence
   At present, Full-to-Full with  AIB2-Gen1 and AIB2-Gen2 are clean
               Full2Half AIB2Gen1 (Leader-DIE_A) -- AIB1.0 (Follower DIE_B) is clean
                  |
                  +--> (scripts/sailrock_cfg_m2s1_f2h.txt  to be renamed as sailrock_cfg.txt and used in MY_TEST1)

   {Rest yet to be supported}
5. The +define+P2P_LITE when uncommented, runs set-up with P2P Lite (SV)model instead of AIB model 
   Uncommenting +define+P2P_LITE_CH_DELAY_ENB will enable the P2P_LITE model to introduce random delay between active channels
   +define+CHAN_DELAY_ENB is optional with use of +define+P2P_LITE_CH_DELAY_ENB.
   (It will further introduce random channel delays in the set-up thereby incresing or decreasing inter-channel delays effectively)
6. Regression mode (TBD)
------------------------------------------------------------------------------------------

--------------------
Directory Structure 
--------------------
design
|
├── ca
│   ├── doc
│   │   └── ca_ug.pdf
│   ├── dv
│   │   ├── aib.f
│   │   ├── ca_pkg.svh
│   │   ├── ca_shm.tcl
│   │   ├── ca_tb.args
│   │   ├── export_src
│   │   │   ├── ca_coverage.sv
│   │   │   ├── ca_data_pkg.svh
│   │   │   ├── ca_rx_tb_in_agent.sv
│   │   │   ├── ca_rx_tb_in_cfg.sv
│   │   │   ├── ca_rx_tb_in_drv.sv
│   │   │   ├── ca_rx_tb_in_if.sv
│   │   │   ├── ca_rx_tb_in_mon.sv
│   │   │   ├── ca_rx_tb_in_pkg.svh
│   │   │   ├── ca_rx_tb_in_seqr.sv
│   │   │   ├── ca_scoreboard.sv
│   │   │   ├── ca_seq_item.sv
│   │   │   ├── ca_tx_tb_in_agent.sv
│   │   │   ├── ca_tx_tb_in_cfg.sv
│   │   │   ├── ca_tx_tb_in_drv.sv
│   │   │   ├── ca_tx_tb_in_if.sv
│   │   │   ├── ca_tx_tb_in_mon.sv
│   │   │   ├── ca_tx_tb_in_pkg.svh
│   │   │   ├── ca_tx_tb_in_seqr.sv
│   │   │   ├── ca_tx_tb_out_agent.sv
│   │   │   ├── ca_tx_tb_out_cfg.sv
│   │   │   ├── ca_tx_tb_out_drv.sv
│   │   │   ├── ca_tx_tb_out_if.sv
│   │   │   ├── ca_tx_tb_out_mon.sv
│   │   │   ├── ca_tx_tb_out_pkg.svh
│   │   │   └── ca_tx_tb_out_seqr.sv
│   │   │   └── chan_delay_agent
│   │   │       └── chan_delay_agent.sv
│   │   │       └── chan_delay_cfg.sv
│   │   │       └── chan_delay_drv.sv
│   │   │       └── chan_delay_if.sv
│   │   │       └── chan_delay_mon.sv
│   │   │       └── chan_delay_pkg.svh
│   │   │       └── chan_delay_seq_item.sv
│   │   │       └── chan_delay_seqr.sv
│   │   ├── local_src
│   │   │   └── ca_gen_if.sv
│   │   ├── README     <<<<< This file >>>>>
│   │   ├── seqs
│   │   │   ├── ca_rx_traffic_seq.sv
│   │   │   ├── ca_seq_lib.sv
│   │   │   ├── ca_tx_traffic_seq.sv
│   │   │   └── virt_seqr.sv
│   │   ├── tb
│   │   │   ├── ca_AIB2g2_full_AIB2g2_half.svh
│   │   │   ├── ca_GENERATED_defines.svh
│   │   │   ├── ca_top_env.sv
│   │   │   └── ca_top_tb.sv
│   │   ├── tests
│   │   │   ├── base_ca_test.sv
│   │   │   ├── ca_basic_test.sv
│   │   │   ├── ca_cfg.sv
│   │   │   └── ca_knobs.sv
│   │   ├── scripts
│   │   │   ├── aib_cfg_default.txt
│   │   │   ├── aib_gen_config
│   │   │   ├── aib_gen_parser.py
│   │   │   ├── ca_cfg_default.txt
│   │   │   ├── ca_gen_parser.pl
│   │   │   ├── ca_gen_parser.py
│   │   │   ├── makefile
│   │   │   ├── readme
│   │   │   ├── run_all_sim.py
│   │   │   ├── run_change_makefile.py
│   │   │   ├── run_sim
│   │   │   ├── sailrock_cfg.txt
│   │   │   └── target_cfg.txt

